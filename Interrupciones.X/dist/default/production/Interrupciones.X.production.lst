

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 02 19:57:05 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _RCONbits	set	4048
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _INTCON3bits	set	4080
    56  0000                     _INTCONbits	set	4082
    57  0000                     _TRISBbits	set	3987
    58  0000                     _LATD	set	3980
    59  0000                     _TRISD	set	3989
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64  000098                     __pcinit:
    65                           	callstack 0
    66  000098                     start_initialization:
    67                           	callstack 0
    68  000098                     __initialization:
    69                           	callstack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (1 bytes)
    72  000098  6A04               	clrf	__pbssCOMRAM& (0+255),c
    73  00009A                     end_of_initialization:
    74                           	callstack 0
    75  00009A                     __end_of__initialization:
    76                           	callstack 0
    77  00009A  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    78  00009C  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    79  00009E  0100               	movlb	0
    80  0000A0  EF20  F000         	goto	_main	;jump to C main() function
    81                           
    82                           	psect	bssCOMRAM
    83  000004                     __pbssCOMRAM:
    84                           	callstack 0
    85  000004                     _x:
    86                           	callstack 0
    87  000004                     	ds	1
    88                           
    89                           	psect	cstackCOMRAM
    90  000001                     __pcstackCOMRAM:
    91                           	callstack 0
    92  000001                     ??_INT1_ISR:
    93                           
    94                           ; 1 bytes @ 0x0
    95  000001                     	ds	3
    96  000004                     
    97                           ; 1 bytes @ 0x3
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 15 in file "Programa_principal.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    3
   123 ;; This function calls:
   124 ;;		_Int_Init
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131  000040                     __ptext0:
   132                           	callstack 0
   133  000040                     _main:
   134                           	callstack 28
   135  000040                     
   136                           ;Programa_principal.c: 16:     Int_Init();
   137  000040  EC3F  F000         	call	_Int_Init	;wreg free
   138  000044                     
   139                           ;Programa_principal.c: 17:     TRISD = 0x00;
   140  000044  0E00               	movlw	0
   141  000046  6E95               	movwf	149,c	;volatile
   142  000048                     
   143                           ;Programa_principal.c: 18:     LATD = 0x00;
   144  000048  0E00               	movlw	0
   145  00004A  6E8C               	movwf	140,c	;volatile
   146  00004C                     l745:
   147                           
   148                           ;Programa_principal.c: 20:         if(x == 1){
   149  00004C  0404               	decf	_x^0,w,c
   150  00004E  A4D8               	btfss	status,2,c
   151  000050  EF2C  F000         	goto	u31
   152  000054  EF2E  F000         	goto	u30
   153  000058                     u31:
   154  000058  EF30  F000         	goto	l749
   155  00005C                     u30:
   156  00005C                     
   157                           ;Programa_principal.c: 21:             LATD = 0xAA;
   158  00005C  0EAA               	movlw	170
   159  00005E  6E8C               	movwf	140,c	;volatile
   160  000060                     l749:
   161                           
   162                           ;Programa_principal.c: 23:         if(x == 2){
   163  000060  0E02               	movlw	2
   164  000062  1804               	xorwf	_x^0,w,c
   165  000064  A4D8               	btfss	status,2,c
   166  000066  EF37  F000         	goto	u41
   167  00006A  EF39  F000         	goto	u40
   168  00006E                     u41:
   169  00006E  EF26  F000         	goto	l745
   170  000072                     u40:
   171  000072                     
   172                           ;Programa_principal.c: 24:             LATD = 0x55;
   173  000072  0E55               	movlw	85
   174  000074  6E8C               	movwf	140,c	;volatile
   175  000076  EF26  F000         	goto	l745
   176  00007A  EF1E  F000         	goto	start
   177  00007E                     __end_of_main:
   178                           	callstack 0
   179                           
   180 ;; *************** function _Int_Init *****************
   181 ;; Defined at:
   182 ;;		line 8 in file "Interrupcion.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		None
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels used:    1
   202 ;; Hardware stack levels required when called:    2
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		_main
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           	psect	text1
   211  00007E                     __ptext1:
   212                           	callstack 0
   213  00007E                     _Int_Init:
   214                           	callstack 28
   215  00007E                     
   216                           ;Interrupcion.c: 9:     TRISBbits.RB0 = 1;
   217  00007E  8093               	bsf	147,0,c	;volatile
   218                           
   219                           ;Interrupcion.c: 10:     TRISBbits.RB1 = 1;
   220  000080  8293               	bsf	147,1,c	;volatile
   221                           
   222                           ;Interrupcion.c: 11:     INTCONbits.INT0IE = 1;
   223  000082  88F2               	bsf	242,4,c	;volatile
   224                           
   225                           ;Interrupcion.c: 12:     INTCON3bits.INT1E = 1;
   226  000084  86F0               	bsf	240,3,c	;volatile
   227                           
   228                           ;Interrupcion.c: 13:     INTCONbits.INT0IF = 0;
   229  000086  92F2               	bcf	242,1,c	;volatile
   230                           
   231                           ;Interrupcion.c: 14:     INTCON3bits.INT1F = 0;
   232  000088  90F0               	bcf	240,0,c	;volatile
   233                           
   234                           ;Interrupcion.c: 15:     INTCON2bits.INTEDG0 = 0;
   235  00008A  9CF1               	bcf	241,6,c	;volatile
   236                           
   237                           ;Interrupcion.c: 16:     INTCON2bits.INTEDG1 = 0;
   238  00008C  9AF1               	bcf	241,5,c	;volatile
   239                           
   240                           ;Interrupcion.c: 17:     RCONbits.IPEN = 1;
   241  00008E  8ED0               	bsf	208,7,c	;volatile
   242                           
   243                           ;Interrupcion.c: 18:     INTCON3bits.INT1P = 0;
   244  000090  9CF0               	bcf	240,6,c	;volatile
   245                           
   246                           ;Interrupcion.c: 19:     INTCONbits.GIEL = 1;
   247  000092  8CF2               	bsf	242,6,c	;volatile
   248                           
   249                           ;Interrupcion.c: 20:     INTCONbits.GIEH = 1;
   250  000094  8EF2               	bsf	242,7,c	;volatile
   251  000096  0012               	return		;funcret
   252  000098                     __end_of_Int_Init:
   253                           	callstack 0
   254                           
   255 ;; *************** function _INT1_ISR *****************
   256 ;; Defined at:
   257 ;;		line 30 in file "Interrupcion.c"
   258 ;; Parameters:    Size  Location     Type
   259 ;;		None
   260 ;; Auto vars:     Size  Location     Type
   261 ;;		None
   262 ;; Return value:  Size  Location     Type
   263 ;;                  1    wreg      void 
   264 ;; Registers used:
   265 ;;		wreg, status,2
   266 ;; Tracked objects:
   267 ;;		On entry : 0/0
   268 ;;		On exit  : 0/0
   269 ;;		Unchanged: 0/0
   270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   271 ;;      Params:         0       0       0       0       0       0       0       0       0
   272 ;;      Locals:         0       0       0       0       0       0       0       0       0
   273 ;;      Temps:          3       0       0       0       0       0       0       0       0
   274 ;;      Totals:         3       0       0       0       0       0       0       0       0
   275 ;;Total ram usage:        3 bytes
   276 ;; Hardware stack levels used:    1
   277 ;; Hardware stack levels required when called:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		Interrupt level 1
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           	psect	intcodelo
   286  000018                     __pintcodelo:
   287                           	callstack 0
   288  000018                     _INT1_ISR:
   289                           	callstack 28
   290                           
   291                           ;incstack = 0
   292  000018  8005               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   293  00001A  CFD8 F001          	movff	status,??_INT1_ISR
   294  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
   295  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
   296  000026                     
   297                           ;Interrupcion.c: 31:     x = 2;
   298  000026  0E02               	movlw	2
   299  000028  6E04               	movwf	_x^0,c
   300  00002A                     
   301                           ;Interrupcion.c: 33:     INTCON3bits.INT1F = 0;
   302  00002A  90F0               	bcf	240,0,c	;volatile
   303  00002C  C003  FFE0         	movff	??_INT1_ISR+2,bsr
   304  000030  C002  FFE8         	movff	??_INT1_ISR+1,wreg
   305  000034  C001  FFD8         	movff	??_INT1_ISR,status
   306  000038  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  00003A  0010               	retfie	
   308  00003C                     __end_of_INT1_ISR:
   309                           	callstack 0
   310                           
   311 ;; *************** function _INT0_ISR *****************
   312 ;; Defined at:
   313 ;;		line 24 in file "Interrupcion.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   327 ;;      Params:         0       0       0       0       0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels used:    1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		Interrupt level 2
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	intcode
   341  000008                     __pintcode:
   342                           	callstack 0
   343  000008                     _INT0_ISR:
   344                           	callstack 28
   345                           
   346                           ;incstack = 0
   347  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   348  00000A  ED52  F000         	call	int_func,f	;refresh shadow registers
   349                           
   350                           	psect	intcode_body
   351  0000A4                     __pintcode_body:
   352                           	callstack 28
   353  0000A4                     int_func:
   354                           	callstack 28
   355  0000A4  0006               	pop		; remove dummy address from shadow register refresh
   356  0000A6                     
   357                           ;Interrupcion.c: 25:     x = 1;
   358  0000A6  0E01               	movlw	1
   359  0000A8  6E04               	movwf	_x^0,c
   360  0000AA                     
   361                           ;Interrupcion.c: 27:     INTCONbits.INT0IF = 0;
   362  0000AA  92F2               	bcf	242,1,c	;volatile
   363  0000AC  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   364  0000AE  0011               	retfie		f
   365  0000B0                     __end_of_INT0_ISR:
   366                           	callstack 0
   367  0000                     
   368                           	psect	rparam
   369  0000                     
   370                           	psect	temp
   371  000005                     btemp:
   372                           	callstack 0
   373  000005                     	ds	1
   374  0000                     int$flags	set	btemp
   375  0000                     wtemp8	set	btemp+1
   376  0000                     ttemp5	set	btemp+1
   377  0000                     ttemp6	set	btemp+4
   378  0000                     ttemp7	set	btemp+8
   379                           
   380                           	psect	idloc
   381                           
   382                           ;Config register IDLOC0 @ 0x200000
   383                           ;	unspecified, using default values
   384  200000                     	org	2097152
   385  200000  FF                 	db	255
   386                           
   387                           ;Config register IDLOC1 @ 0x200001
   388                           ;	unspecified, using default values
   389  200001                     	org	2097153
   390  200001  FF                 	db	255
   391                           
   392                           ;Config register IDLOC2 @ 0x200002
   393                           ;	unspecified, using default values
   394  200002                     	org	2097154
   395  200002  FF                 	db	255
   396                           
   397                           ;Config register IDLOC3 @ 0x200003
   398                           ;	unspecified, using default values
   399  200003                     	org	2097155
   400  200003  FF                 	db	255
   401                           
   402                           ;Config register IDLOC4 @ 0x200004
   403                           ;	unspecified, using default values
   404  200004                     	org	2097156
   405  200004  FF                 	db	255
   406                           
   407                           ;Config register IDLOC5 @ 0x200005
   408                           ;	unspecified, using default values
   409  200005                     	org	2097157
   410  200005  FF                 	db	255
   411                           
   412                           ;Config register IDLOC6 @ 0x200006
   413                           ;	unspecified, using default values
   414  200006                     	org	2097158
   415  200006  FF                 	db	255
   416                           
   417                           ;Config register IDLOC7 @ 0x200007
   418                           ;	unspecified, using default values
   419  200007                     	org	2097159
   420  200007  FF                 	db	255
   421                           
   422                           	psect	config
   423                           
   424                           ;Config register CONFIG1L @ 0x300000
   425                           ;	PLL Prescaler Selection bits
   426                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   427                           ;	System Clock Postscaler Selection bits
   428                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   429                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   430                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   431  300000                     	org	3145728
   432  300000  00                 	db	0
   433                           
   434                           ;Config register CONFIG1H @ 0x300001
   435                           ;	Oscillator Selection bits
   436                           ;	FOSC = HS, HS oscillator (HS)
   437                           ;	Fail-Safe Clock Monitor Enable bit
   438                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   439                           ;	Internal/External Oscillator Switchover bit
   440                           ;	IESO = OFF, Oscillator Switchover mode disabled
   441  300001                     	org	3145729
   442  300001  0C                 	db	12
   443                           
   444                           ;Config register CONFIG2L @ 0x300002
   445                           ;	Power-up Timer Enable bit
   446                           ;	PWRT = ON, PWRT enabled
   447                           ;	Brown-out Reset Enable bits
   448                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   449                           ;	Brown-out Reset Voltage bits
   450                           ;	BORV = 3, Minimum setting 2.05V
   451                           ;	USB Voltage Regulator Enable bit
   452                           ;	VREGEN = OFF, USB voltage regulator disabled
   453  300002                     	org	3145730
   454  300002  18                 	db	24
   455                           
   456                           ;Config register CONFIG2H @ 0x300003
   457                           ;	Watchdog Timer Enable bit
   458                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   459                           ;	Watchdog Timer Postscale Select bits
   460                           ;	WDTPS = 32768, 1:32768
   461  300003                     	org	3145731
   462  300003  1E                 	db	30
   463                           
   464                           ; Padding undefined space
   465  300004                     	org	3145732
   466  300004  FF                 	db	255
   467                           
   468                           ;Config register CONFIG3H @ 0x300005
   469                           ;	CCP2 MUX bit
   470                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   471                           ;	PORTB A/D Enable bit
   472                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   473                           ;	Low-Power Timer 1 Oscillator Enable bit
   474                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   475                           ;	MCLR Pin Enable bit
   476                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   477  300005                     	org	3145733
   478  300005  81                 	db	129
   479                           
   480                           ;Config register CONFIG4L @ 0x300006
   481                           ;	Stack Full/Underflow Reset Enable bit
   482                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   483                           ;	Single-Supply ICSP Enable bit
   484                           ;	LVP = ON, Single-Supply ICSP enabled
   485                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   486                           ;	ICPRT = OFF, ICPORT disabled
   487                           ;	Extended Instruction Set Enable bit
   488                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   489                           ;	Background Debugger Enable bit
   490                           ;	DEBUG = 0x1, unprogrammed default
   491  300006                     	org	3145734
   492  300006  84                 	db	132
   493                           
   494                           ; Padding undefined space
   495  300007                     	org	3145735
   496  300007  FF                 	db	255
   497                           
   498                           ;Config register CONFIG5L @ 0x300008
   499                           ;	Code Protection bit
   500                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   501                           ;	Code Protection bit
   502                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   503                           ;	Code Protection bit
   504                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   505                           ;	Code Protection bit
   506                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   507  300008                     	org	3145736
   508  300008  0F                 	db	15
   509                           
   510                           ;Config register CONFIG5H @ 0x300009
   511                           ;	Boot Block Code Protection bit
   512                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   513                           ;	Data EEPROM Code Protection bit
   514                           ;	CPD = OFF, Data EEPROM is not code-protected
   515  300009                     	org	3145737
   516  300009  C0                 	db	192
   517                           
   518                           ;Config register CONFIG6L @ 0x30000A
   519                           ;	Write Protection bit
   520                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   521                           ;	Write Protection bit
   522                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   523                           ;	Write Protection bit
   524                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   525                           ;	Write Protection bit
   526                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   527  30000A                     	org	3145738
   528  30000A  0F                 	db	15
   529                           
   530                           ;Config register CONFIG6H @ 0x30000B
   531                           ;	Configuration Register Write Protection bit
   532                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   533                           ;	Boot Block Write Protection bit
   534                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   535                           ;	Data EEPROM Write Protection bit
   536                           ;	WRTD = OFF, Data EEPROM is not write-protected
   537  30000B                     	org	3145739
   538  30000B  E0                 	db	224
   539                           
   540                           ;Config register CONFIG7L @ 0x30000C
   541                           ;	Table Read Protection bit
   542                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   543                           ;	Table Read Protection bit
   544                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   545                           ;	Table Read Protection bit
   546                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   547                           ;	Table Read Protection bit
   548                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   549  30000C                     	org	3145740
   550  30000C  0F                 	db	15
   551                           
   552                           ;Config register CONFIG7H @ 0x30000D
   553                           ;	Boot Block Table Read Protection bit
   554                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   555  30000D                     	org	3145741
   556  30000D  40                 	db	64
   557                           tosu	equ	0xFFF
   558                           tosh	equ	0xFFE
   559                           tosl	equ	0xFFD
   560                           stkptr	equ	0xFFC
   561                           pclatu	equ	0xFFB
   562                           pclath	equ	0xFFA
   563                           pcl	equ	0xFF9
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           indf0	equ	0xFEF
   571                           postinc0	equ	0xFEE
   572                           postdec0	equ	0xFED
   573                           preinc0	equ	0xFEC
   574                           plusw0	equ	0xFEB
   575                           fsr0h	equ	0xFEA
   576                           fsr0l	equ	0xFE9
   577                           wreg	equ	0xFE8
   578                           indf1	equ	0xFE7
   579                           postinc1	equ	0xFE6
   580                           postdec1	equ	0xFE5
   581                           preinc1	equ	0xFE4
   582                           plusw1	equ	0xFE3
   583                           fsr1h	equ	0xFE2
   584                           fsr1l	equ	0xFE1
   585                           bsr	equ	0xFE0
   586                           indf2	equ	0xFDF
   587                           postinc2	equ	0xFDE
   588                           postdec2	equ	0xFDD
   589                           preinc2	equ	0xFDC
   590                           plusw2	equ	0xFDB
   591                           fsr2h	equ	0xFDA
   592                           fsr2l	equ	0xFD9
   593                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _Int_Init
 ---------------------------------------------------------------------------------
 (1) _Int_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       4       1        4.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 02 19:57:05 2021

                      _x 0004                       l33 0096                       u30 005C  
                     u31 0058                       u40 0072                       u41 006E  
                     bsr 000FE0                      l741 0044                      l751 0072  
                    l743 0048                      l737 007E                      l745 004C  
                    l747 005C                      l739 0040                      l749 0060  
                    wreg 000FE8                     _LATD 000F8C                     i1l43 002C  
                   i2l38 00AC                     _main 0040                     btemp 0005  
                   start 003C             ___param_bank 000000         __end_of_INT0_ISR 00B0  
       __end_of_INT1_ISR 003C                    ?_main 0001                    i1l757 0026  
                  i1l759 002A                    i2l753 00A6                    i2l755 00AA  
                  _TRISD 000F95                    ttemp5 0006                    ttemp6 0009  
                  ttemp7 000D                    status 000FD8                    wtemp8 0006  
        __initialization 0098             __end_of_main 007E         __end_of_Int_Init 0098  
                 ??_main 0004            __activetblptr 000000               __accesstop 0060  
__end_of__initialization 009A                ?_INT0_ISR 0001                ?_INT1_ISR 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_Int_Init 0001  
             ??_INT0_ISR 0001               ??_INT1_ISR 0001               ??_Int_Init 0004  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0098  
                __ramtop 0800                  __ptext0 0040                  __ptext1 007E  
         __pintcode_body 00A4     end_of_initialization 009A                  int_func 00A4  
              _TRISBbits 000F93        __size_of_INT0_ISR 00A8        __size_of_INT1_ISR 0024  
    start_initialization 0098        __size_of_Int_Init 001A              __pbssCOMRAM 0004  
              __pintcode 0008              __pintcodelo 0018                 _INT0_ISR 0008  
               _INT1_ISR 0018                 _RCONbits 000FD0              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 _Int_Init 007E                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 003E                 int$flags 0005  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
